pipeline {
    agent any

    environment {
        DOCKERHUB_CREDENTIALS = credentials('dockerhub-credentials')
        IMAGE_NAME = 'sergioortiz170992/nginx:latest'
    }

    stages {
        stage('Obtener IP PÃºblica de EC2') {
            steps {
                script {
                    EC2_HOST = "ec2-user@" + sh(script: "curl -s http://169.254.169.254/latest/meta-data/public-ipv4", returnStdout: true).trim()
                    echo "ðŸ“¢ IP PÃºblica de EC2: ${EC2_HOST}"
                }
            }
        }

        stage('Checkout CÃ³digo') {
            steps {
                git branch: 'main', url: 'https://github.com/sergioortiz17/devops-interview-solution.git'
            }
        }

        stage('Build Docker Image') {
            steps {
                script {
                    sh "docker build -t $IMAGE_NAME ."
                }
            }
        }

        stage('Login en DockerHub') {
            steps {
                script {
                    sh "echo ${DOCKERHUB_CREDENTIALS_PSW} | docker login -u ${DOCKERHUB_CREDENTIALS_USR} --password-stdin"
                }
            }
        }

        stage('Push Image to DockerHub') {
            steps {
                script {
                    sh "docker push $IMAGE_NAME"
                }
            }
        }

        stage('Deploy en Servidor EC2') {
            steps {
                sshagent (credentials: ['ec2-ssh-key']) {
                    script {
                        sh '''
                        ssh -o StrictHostKeyChecking=no $EC2_HOST <<EOF
                        docker pull $IMAGE_NAME
                        docker stop nginx-container || true
                        docker rm nginx-container || true
                        docker run -d --name nginx-container -p 80:80 $IMAGE_NAME
                        EOF
                        '''
                    }
                }
            }
        }
    }
}
